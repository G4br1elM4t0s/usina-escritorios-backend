{
  "openapi": "3.0.0",
  "info": {
    "title": "Usina Escritórios API",
    "version": "1.0.0",
    "description": "API para gerenciamento de usuários da Usina Escritórios"
  },
  "tags": [
    {
      "name": "Autenticação",
      "description": "Endpoints relacionados à autenticação de usuários"
    },
    {
      "name": "Usuários",
      "description": "Operações CRUD para usuários"
    },
    {
      "name": "Escritórios",
      "description": "Operações CRUD para escritórios"
    },
    {
      "name": "Agendamentos",
      "description": "Operações para gerenciar agendamentos de visitantes"
    },
    {
      "name": "Disponibilidade",
      "description": "Operações para gerenciar disponibilidade de escritórios"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Servidor de desenvolvimento"
    }
  ],
  "paths": {
    "/api/offices": {
      "get": {
        "tags": ["Escritórios"],
        "summary": "Listar escritórios",
        "description": "Retorna a lista de escritórios. Acesso público com dados básicos, dados completos para ADMIN.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Itens por página",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "Termo de busca",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Incluir escritórios deletados (apenas ADMIN)",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de escritórios retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OfficeResponse"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "perPage": {
                          "type": "integer"
                        },
                        "total": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [{"bearerAuth": []}],
        "tags": ["Escritórios"],
        "summary": "Criar escritório",
        "description": "Cria um novo escritório (requer autenticação como ADMIN)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOfficeInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Escritório criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/OfficeResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Não autorizado"
          }
        }
      }
    },
    "/api/offices/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID do escritório",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["Escritórios"],
        "summary": "Buscar escritório por ID",
        "description": "Retorna os dados de um escritório específico. Acesso público com dados básicos, dados completos para ADMIN e OFFICE_OWNER do escritório.",
        "responses": {
          "200": {
            "description": "Escritório encontrado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/OfficeResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Escritório não encontrado"
          }
        }
      },
      "put": {
        "security": [{"bearerAuth": []}],
        "tags": ["Escritórios"],
        "summary": "Atualizar escritório",
        "description": "Atualiza os dados de um escritório específico. ADMIN pode atualizar todos os campos, OFFICE_OWNER pode atualizar apenas companyName do seu próprio escritório.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOfficeInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Escritório atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/OfficeResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Não autorizado"
          },
          "404": {
            "description": "Escritório não encontrado"
          }
        }
      },
      "delete": {
        "security": [{"bearerAuth": []}],
        "tags": ["Escritórios"],
        "summary": "Excluir escritório",
        "description": "Realiza a exclusão lógica de um escritório (requer autenticação como ADMIN)",
        "responses": {
          "200": {
            "description": "Escritório excluído com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Não autenticado"
          },
          "403": {
            "description": "Não autorizado"
          },
          "404": {
            "description": "Escritório não encontrado"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Autenticação"],
        "summary": "Autenticar usuário",
        "description": "Realiza o login do usuário e retorna um token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Token JWT para autenticação"
                    },
                    "user": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "401": {
            "description": "Credenciais inválidas"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "security": [{"bearerAuth": []}],
        "tags": ["Usuários"],
        "summary": "Listar usuários",
        "description": "Retorna a lista de todos os usuários (requer autenticação como ADMIN)",
        "responses": {
          "200": {
            "description": "Lista de usuários retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [{"bearerAuth": []}],
        "tags": ["Usuários"],
        "summary": "Criar usuário",
        "description": "Cria um novo usuário (requer autenticação como ADMIN)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          }
        }
      }
    },
    "/api/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID do usuário",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "security": [{"bearerAuth": []}],
        "tags": ["Usuários"],
        "summary": "Obter usuário por ID",
        "description": "Retorna os dados de um usuário específico (requer autenticação)",
        "responses": {
          "200": {
            "description": "Dados do usuário retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "401": {
            "description": "Token de acesso inválido ou expirado"
          }
        }
      },
      "put": {
        "security": [{"bearerAuth": []}],
        "tags": ["Usuários"],
        "summary": "Atualizar usuário",
        "description": "Atualiza os dados de um usuário específico (requer autenticação como ADMIN)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dados de entrada inválidos"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      },
      "delete": {
        "security": [{"bearerAuth": []}],
        "tags": ["Usuários"],
        "summary": "Excluir usuário",
        "description": "Realiza a exclusão lógica de um usuário (requer autenticação como ADMIN)",
        "responses": {
          "200": {
            "description": "Usuário excluído com sucesso"
          },
          "404": {
            "description": "Usuário não encontrado"
          }
        }
      }
    },
    "/api/appointments": {
      "post": {
        "tags": ["Agendamentos"],
        "summary": "Criar agendamento",
        "description": "Cria um novo agendamento (público - não requer autenticação)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Agendamento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/AppointmentResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou horário não disponível"
          },
          "409": {
            "description": "Já existe um agendamento neste horário"
          }
        }
      },
      "get": {
        "security": [{"bearerAuth": []}],
        "tags": ["Agendamentos"],
        "summary": "Listar agendamentos",
        "description": "Lista agendamentos baseado no role do usuário (requer autenticação)",
        "responses": {
          "200": {
            "description": "Lista de agendamentos retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AppointmentResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token de acesso inválido ou expirado"
          }
        }
      }
    },
    "/api/appointments/{id}": {
      "get": {
        "security": [{"bearerAuth": []}],
        "tags": ["Agendamentos"],
        "summary": "Obter agendamento por ID",
        "description": "Retorna os dados de um agendamento específico (requer autenticação)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do agendamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dados do agendamento retornados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/AppointmentResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Agendamento não encontrado"
          },
          "403": {
            "description": "Acesso negado"
          },
          "401": {
            "description": "Token de acesso inválido ou expirado"
          }
        }
      },
      "put": {
        "security": [{"bearerAuth": []}],
        "tags": ["Agendamentos"],
        "summary": "Atualizar status do agendamento",
        "description": "Atualiza o status de um agendamento (requer autenticação e permissões)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do agendamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status do agendamento atualizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/AppointmentResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Agendamento não encontrado"
          },
          "403": {
            "description": "Você não tem permissão para atualizar este agendamento"
          },
          "401": {
            "description": "Token de acesso inválido ou expirado"
          }
        }
      }
    },
    "/api/offices/{id}/availability": {
      "post": {
        "security": [{"bearerAuth": []}],
        "tags": ["Disponibilidade"],
        "summary": "Criar disponibilidade",
        "description": "Cria uma nova disponibilidade para o escritório (apenas OFFICE_OWNER)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do escritório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAvailabilityRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Disponibilidade criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/AvailabilityResponse"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dados inválidos ou escritório não ativo"
          },
          "403": {
            "description": "Apenas o proprietário do escritório pode criar disponibilidade"
          },
          "409": {
            "description": "Já existe uma disponibilidade que sobrepõe este período"
          },
          "401": {
            "description": "Token de acesso inválido ou expirado"
          }
        }
      },
      "get": {
        "tags": ["Disponibilidade"],
        "summary": "Listar disponibilidades",
        "description": "Lista as disponibilidades de um escritório (público)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do escritório",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de disponibilidades retornada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AvailabilityResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Escritório não encontrado"
          }
        }
      }
    },
    "/api/offices/{id}/availability/{availId}": {
      "delete": {
        "security": [{"bearerAuth": []}],
        "tags": ["Disponibilidade"],
        "summary": "Deletar disponibilidade",
        "description": "Remove uma disponibilidade do escritório (apenas OFFICE_OWNER)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do escritório",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "availId",
            "in": "path",
            "required": true,
            "description": "ID da disponibilidade",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Disponibilidade removida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Disponibilidade removida com sucesso"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Escritório ou disponibilidade não encontrado"
          },
          "403": {
            "description": "Apenas o proprietário do escritório pode deletar disponibilidade"
          },
          "401": {
            "description": "Token de acesso inválido ou expirado"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateOfficeInput": {
        "type": "object",
        "required": ["number", "floor", "area", "ownerId"],
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do escritório"
          },
          "floor": {
            "type": "string",
            "description": "Andar do escritório"
          },
          "area": {
            "type": "number",
            "description": "Área do escritório em metros quadrados"
          },
          "ownerId": {
            "type": "string",
            "description": "ID do usuário OFFICE_OWNER responsável pelo escritório"
          },
          "companyName": {
            "type": "string",
            "description": "Nome da empresa que ocupa o escritório"
          }
        }
      },
      "UpdateOfficeInput": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do escritório"
          },
          "floor": {
            "type": "string",
            "description": "Andar do escritório"
          },
          "area": {
            "type": "number",
            "description": "Área do escritório em metros quadrados"
          },
          "ownerId": {
            "type": "string",
            "description": "ID do usuário OFFICE_OWNER responsável pelo escritório"
          },
          "companyName": {
            "type": "string",
            "description": "Nome da empresa que ocupa o escritório"
          }
        }
      },
      "OfficeResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do escritório"
          },
          "number": {
            "type": "string",
            "description": "Número do escritório"
          },
          "floor": {
            "type": "string",
            "description": "Andar do escritório"
          },
          "area": {
            "type": "number",
            "description": "Área do escritório em metros quadrados"
          },
          "ownerId": {
            "type": "string",
            "description": "ID do usuário OFFICE_OWNER responsável pelo escritório"
          },
          "companyName": {
            "type": "string",
            "description": "Nome da empresa que ocupa o escritório"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status de ativação do escritório"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do escritório"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data da última atualização do escritório"
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de exclusão do escritório (soft delete)"
          }
        }
      },
      "LoginInput": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Senha do usuário (mínimo 6 caracteres)"
          }
        }
      },
      "CreateUserInput": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "description": "Senha do usuário (mínimo 6 caracteres)"
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "ATTENDANT", "OFFICE_OWNER"],
            "default": "ATTENDANT",
            "description": "Papel do usuário no sistema"
          },
          "isActive": {
            "type": "boolean",
            "default": true,
            "description": "Status de ativação do usuário"
          }
        }
      },
      "UpdateUserInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "ATTENDANT", "OFFICE_OWNER"],
            "description": "Papel do usuário no sistema"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status de ativação do usuário"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do usuário"
          },
          "name": {
            "type": "string",
            "description": "Nome do usuário"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do usuário"
          },
          "role": {
            "type": "string",
            "enum": ["ADMIN", "ATTENDANT", "OFFICE_OWNER"],
            "description": "Papel do usuário no sistema"
          },
          "isActive": {
            "type": "boolean",
            "description": "Status de ativação do usuário"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do usuário"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data da última atualização do usuário"
          }
        }
      },
      "VisitorRequest": {
        "type": "object",
        "required": ["name", "email", "whatsapp"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Maria Santos"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "maria@exemplo.com"
          },
          "whatsapp": {
            "type": "string",
            "example": "+5511999999999"
          }
        }
      },
      "CreateAppointmentRequest": {
        "type": "object",
        "required": ["officeId", "scheduledAt", "visitor"],
        "properties": {
          "officeId": {
            "type": "string",
            "example": "60d5ecb74b24a1234567890b"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T14:30:00.000Z"
          },
          "visitor": {
            "$ref": "#/components/schemas/VisitorRequest"
          }
        }
      },
      "UpdateAppointmentRequest": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "enum": ["PENDING", "CONFIRMED", "CANCELLED", "COMPLETED"],
            "example": "CONFIRMED"
          }
        }
      },
      "AppointmentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "60d5ecb74b24a1234567890c"
          },
          "officeId": {
            "type": "string",
            "example": "60d5ecb74b24a1234567890b"
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T14:30:00.000Z"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CONFIRMED", "CANCELLED", "COMPLETED"],
            "example": "PENDING"
          },
          "visitor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "60d5ecb74b24a1234567890d"
              },
              "name": {
                "type": "string",
                "example": "Maria Santos"
              },
              "email": {
                "type": "string",
                "example": "maria@exemplo.com"
              },
              "whatsapp": {
                "type": "string",
                "example": "+5511999999999"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T10:30:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T10:30:00.000Z"
          }
        }
      },
      "CreateAvailabilityRequest": {
        "type": "object",
        "required": ["availableFrom", "availableTo"],
        "properties": {
          "availableFrom": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T09:00:00.000Z"
          },
          "availableTo": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T18:00:00.000Z"
          }
        }
      },
      "AvailabilityResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "60d5ecb74b24a1234567890e"
          },
          "officeId": {
            "type": "string",
            "example": "60d5ecb74b24a1234567890b"
          },
          "availableFrom": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T09:00:00.000Z"
          },
          "availableTo": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T18:00:00.000Z"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T08:30:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2024-01-25T08:30:00.000Z"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtido na rota de login. Use o formato: Bearer <token>"
      }
    }
  }
}